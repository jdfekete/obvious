#summary User guide
=User guide=

==1. Installing Obvious==

===[CompilationGuide 1.1. How to install Obvious]===
====[CompilationGuide#Introduction 1.1.1. Introduction]====
====[CompilationGuide#Details 1.1.2. In details]====
=====[CompilationGuide#Details 1.1.2.1. Developing, updating and enhancing existing Obvious bindings]=====
=====[CompilationGuide#Details 1.1.2.2. Using an Obvious binding for your project]=====

===[TestGuide 1.2. Testing]===

====[TestGuide#Introduction 1.2.1. Introduction]====
====[TestGuide#Details 1.2.2 In details]====

==2. Getting started: the Obvious model==

===[InfoVisRefModel 2.1. The InfoVis standard reference model]===
<p/>
===[SofwareArchitecture 2.2. Existing implementations]===
====2.2.1. Introduction====
====2.2.2. Different implementations====
====2.2.3. Organization of the different implementations====
=====2.2.3.1. One toolkit four parts=====
=====2.2.3.2. Composition of the different bindings=====
=====2.2.3.3. Class diagramm=====

==3. The Obvious model==

===[DataModel 3.1. The Obvious data model]===
====[DataModel#Introduction 3.1.1. Introduction]====
====[DataModel#Interfaces 3.1.2. Interfaces]====
=====[DataModel#Schema 3.1.2.1 Schema]=====
=====[DataModel#Tuple,_Node_and_Edge 3.1.2.2 Tuple, Node and Edge]=====
=====[DataModel#Data 3.1.2.2 Data]=====
=====[DataModel#Table 3.1.2.3 Table]=====
=====[DataModel#Graph,_Network_and_Tree 3.1.2.4. Graph, Network and Tree]=====
====[DataModel#Different_ways_to_instantiate_and_fill_Obvious_data_structures 3.1.3. Different ways to instantiate and fill data structures]====
=====[DataModel#Creating_Obvious_data_structures 3.1.3.1 Creating Obvious data structures]=====
=====[DataModel#Filling_Obvious_data_structures 3.1.3.2 Filling Obvious data structures]=====
====[DataModel#Class_diagramm 3.1.4 Class diagramm]====

===[Visualization 3.2. The Visualization part in Obvious]===
====3.2.1. Introduction====
====3.2.2. Description of the Visualization abstract class====
=====3.2.2.1. How to create an Obvious visualization?=====
=====3.2.2.2. Parameters for the Visualization class=====
====3.2.3. Creating visualization====
=====3.2.3.1. Using the VisualizationFactory class=====
=====3.2.3.2. Direct instantiation=====
===[View 3.3. The View part in Obvious]===
====3.3.1. Introduction====
====3.3.2. The View interface====
====3.3.3. The JView abstract class====
====3.3.4. The ViewListener interface====

==4. Additional Obvious features==

===[obviousx 4.1. ObviousX]===
====4.1.1. Introduction====
====4.1.2. The different packages of ObviousX====
=====4.1.2.1. obviousx.io=====
=====4.1.2.2 obviousx.text=====
=====4.1.2.3 obviousx.util=====

===[NotificationModel 4.2. The notification model]===
====4.2.1. Introduction====
====4.2.2. A standard syntax for the notification model====
====4.2.3. Obvious JDBC binding: introducing new mechanisms for notification model====
====4.2.4. Sequence diagramm for the notification model====

===[Predicate 4.3. Predicate]===
====4.3.1. Introduction====
====4.3.2. Implementations====
=====4.3.2.1. Prefuse=====
=====4.3.2.2. Infovis Toolkit=====